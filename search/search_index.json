{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ToDo Lists V360","text":"<p>Link do Reposit\u00f3rio: https://github.com/wildemberg-sales/ToDo-V360</p>"},{"location":"#apresentacao","title":"Apresenta\u00e7\u00e3o","text":"<p>Este produto de software \u00e9 voltado a cria\u00e7\u00e3o de uma aplica\u00e7\u00e3o de ToDo List, que possui como suas duas principais funcionalidades:</p> <ul> <li>Criar v\u00e1rias listas de ToDo;</li> <li>Cada lista pode ter nenhum ou v\u00e1rios items;</li> </ul> <p>A partir desses principais requisitos para o produto, foi feito uma pesquisa para elicita\u00e7\u00e3o de novos requisitos para a aplica\u00e7\u00e3o. A metodologia utilizada para a elicita\u00e7\u00e3o de requisitos foi realizar entrevistas com usu\u00e1rios que tem o perfil e o costume de utilizar aplica\u00e7\u00f5es de ToDo no seu dia a dia. </p> <p>Com a realiza\u00e7\u00e3o dessas pesquisas foi poss\u00edvel elicitar um total de 4 requisitos a mais para o projeto que enriqueceram mais ainda o produto final. Os requisitos fornecidos pelos entrevistados foram:</p> <ul> <li>Um sistema completo de controle com as tarefas, ou seja, criar, atualizar, e deletar a tarefa (CRUD);</li> <li>Um sistema para definir datas e/ou hor\u00e1rios limites para as tarefas;</li> <li>A possibilidade de definir a prioridade de uma tarefa entre baixa, m\u00e9dia e alta;</li> <li>Um sistema que identifica quais tarefas est\u00e3o atrasadas;</li> </ul>"},{"location":"#planejamento","title":"Planejamento","text":"<p>Para a defini\u00e7\u00e3o final do que deve ser implementado no projeto e como deve ser implementado, foi criado documenta\u00e7\u00f5es para o produto onde cada um dos artefatos explica de forma detalhada como foi feito o planejamento da implementa\u00e7\u00e3o. Com uma vis\u00e3o mais geral, primeiramente foi trabalhado os requisitos para eles serem separados em hist\u00f3rias de usu\u00e1rios, com isso o escopo do projeto foi fechado gerando o backlog do produto. Ap\u00f3s entender as necessidades do produto, foi realizado a constru\u00e7\u00e3o da arquitetura do projeto, que envolveu o planejamento da arquitetura do software, diagramas de classe e um diagrama l\u00f3gico de dados para entender como seria a organiza\u00e7\u00e3o do banco de dados da aplica\u00e7\u00e3o. Para organiza\u00e7\u00e3o do projeto foi utilizado o Projects do GitHub para organizar o backlog do produto e as tarefas a parte do desenvolvimento que precisavam ser realizadas. Caso tenha interesse pode acessar o link do Projects CLICANDO AQUI.</p>"},{"location":"#como-utilizar","title":"Como Utilizar","text":"<p>Para uma f\u00e1cil utiliza\u00e7\u00e3o da aplica\u00e7\u00e3o, todo o produto foi encapsulado em um sistema de containers utilizando Docker, isso facilita a visualiza\u00e7\u00e3o da aplica\u00e7\u00e3o pelo usu\u00e1rio final que tiver interesse em testar a aplica\u00e7\u00e3o em um ambiente controlado.</p>"},{"location":"#executando-a-aplicacao","title":"Executando a Aplica\u00e7\u00e3o","text":"<p>Para execu\u00e7\u00e3o da aplica\u00e7\u00e3o \u00e9 necess\u00e1rio ter somente o Docker instalado em sua m\u00e1quina. Caso n\u00e3o tenha o Docker a seguir vou deixar o link para consulta da documenta\u00e7\u00e3o, onde ser\u00e1 poss\u00edvel fazer a instala\u00e7\u00e3o da aplica\u00e7\u00e3o e seus plugins:  </p> <ul> <li>Docker Engine: https://docs.docker.com/engine/install/</li> <li>Compose Plugin: https://docs.docker.com/compose/install/linux/</li> </ul> <p>Ap\u00f3s instalado as depend\u00eancias necess\u00e1rias para execu\u00e7\u00e3o da aplica\u00e7\u00e3o, basta realizar os seguintes passos:</p> <ul> <li>Clonar o projeto;</li> <li>Entrar na pasta do projeto clonado:</li> <li>Executar no terminal dentro da pasta: <code>docker compose up</code></li> </ul> <p>Com isso a aplica\u00e7\u00e3o deve iniciar normalmente sem problemas.</p>"},{"location":"arquitetura/","title":"Arquitetura","text":""},{"location":"arquitetura/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O documento de arquitetura de um projeto consiste em definir como ser\u00e1 a estrutura do software que ser\u00e1 produzido, isso engloba o padr\u00e3o arquitetural que ser\u00e1 utilizado, os servi\u00e7os e ferramentas que ser\u00e3o utilizadas para desenvolvimento, dentre outros aspectos do projeto.</p>"},{"location":"arquitetura/#metodologia","title":"Metodologia","text":"<p>Para cria\u00e7\u00e3o deste documento de arquitetura de software, foram selecionados somente 3 artefatos para serem utilizados como guia do projeto em sua execu\u00e7\u00e3o. O primeiro consiste na representa\u00e7\u00e3o arquitetural do software, onde \u00e9 detalhado como ser\u00e1 a estrutura do projeto e os servi\u00e7os que ir\u00e3o compor essa estrutura. O segundo artefato \u00e9 o diagrama de classe que costuma ser utilizado para representar a estrutura do sistema, as classes que comp\u00f5em esse sistema, seus atributos, m\u00e9todos e relacionamentos entre elas. E por fim o terceiro artefato consiste no Diagrama l\u00f3gico de dados, que \u00e9 utilizado para entender as entidades do projeto e seus respectivos atributos, e como estas entidades se relacionam entre si, tudo isso dentro do contexto de um sistema de banco de dados.</p>"},{"location":"arquitetura/#representacao-arquitetural","title":"Representa\u00e7\u00e3o Arquitetural","text":"<p>Para este projeto foi definido uma arquitetura em camadas, essa arquitetura ir\u00e1 consistir em 3 camadas, a de apresenta\u00e7\u00e3o que ir\u00e1 ser a da interface do usu\u00e1rios (front-end) que ser\u00e1 codificado usando o framework NexjJS, a camada de l\u00f3gica de neg\u00f3cios que ser\u00e1 a API de comunica\u00e7\u00e3o entre a interface e o banco de dados, onde a API ser\u00e1 feita utilizando o framework Ruby on Rails, e a \u00faltima camada ser\u00e1 a de dados que \u00e9 respons\u00e1vel por ter o sistema de banco de dados PostgreSQL. A seguir na imagem 1 temos a imagem do diagrama de rela\u00e7\u00f5es:  </p> Imagem 1: Diagrama de Rela\u00e7\u00f5es <p></p>"},{"location":"arquitetura/#diagrama-de-classe","title":"Diagrama de Classe","text":"<p>Para este projeto ser\u00e1 utilizado duas classes para representar nossas entidades, onde Task \u00e9 a representa\u00e7\u00e3o das tarefas que ser\u00e3o cadastradas na aplica\u00e7\u00e3o, essa classe ir\u00e1 possuir o seguinte atributos: id, nome, descri\u00e7\u00e3o, data, hor\u00e1rio e prioridade. E a segunda classe ser\u00e1 a representa\u00e7\u00e3o das nossas listas de task, chamada de List, onde os atributos dessa classe s\u00e3o: nome e descri\u00e7\u00e3o. A seguir na imagem 2 podemos ver a imagem do diagrama de classe:  </p> Imagem 2: Diagrama de Classe <p></p>"},{"location":"arquitetura/#diagrama-logico-de-dados","title":"Diagrama L\u00f3gico de Dados","text":"<p>Ao analisar o projeto, identifica-se que o banco de dados ir\u00e1 possuir duas entidades, Task e List, que ir\u00e3o possuir uma rela\u00e7\u00e3o entre elas onde a cardinalidade ficar\u00e1 1:N nesta rela\u00e7\u00e3o. A seguir na imagem 3 podemos ver o diagrama l\u00f3gico de dados que mostra a estrutura do nosso banco de dados:</p> Imagem 3: Diagrama L\u00f3gico de Dados <p></p>"},{"location":"backlog/","title":"Backlog do Produto","text":""},{"location":"backlog/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O Backlog \u00e9 o conjunto de funcionalidades que comp\u00f5em o produto de software, definindo o escopo do projeto a ser seguido e demais tarefas a serem realizadas. Para desenvolvimento do backlog do produto, foi utilizado os requisitos elicitados na etapa Brainstorm, e para modelagem de tais requisitos foi utilizado o sistema de Hist\u00f3ria de Usu\u00e1rio (User Story).   </p>"},{"location":"backlog/#metologia","title":"Metologia","text":"<p>Para utiliza\u00e7\u00e3o da modelagem com o modelo de Hist\u00f3ria de Usu\u00e1rios, foi seguido as regras do modelo para padroniza\u00e7\u00e3o da modelagem. A seguir temos o padr\u00e3o utilizado para a modelagem destes requisitos:</p> <p>Eu, como [perfil do usu\u00e1rio utilizador], gostaria de [funcionalidade a ser utilizada], para que [motivo da funcionalidade]</p>"},{"location":"backlog/#historias-de-usuarios","title":"Hist\u00f3rias de Usu\u00e1rios","text":"<p>A seguir na tabela 1, temos o backlog do projeto modelado pelas hist\u00f3rias de usu\u00e1rios:</p> Tabela 1: Backlog do Software ID Hist\u00f3ria de Usu\u00e1rio US1 Eu, como usu\u00e1rio, gostaria de cadastrar tarefas, para que eu possa organizar minhas atividades di\u00e1rias. US2 Eu, como usu\u00e1rio, gostaria de alterar o conte\u00fado da tarefa j\u00e1 criada, para que eu possa atualizar informa\u00e7\u00f5es. US3 Eu, como usu\u00e1rio, gostaria de excluir uma ou mais tarefas, para que eu possa manter minha lista limpa e organizada. US4 Eu, como usu\u00e1rio, gostaria de definir uma data limite para a tarefa, para que eu possa gerenciar melhor meu tempo. US5 Eu, como usu\u00e1rio, gostaria de definir um hor\u00e1rio para a tarefa, para que eu possa programar meu dia de forma eficiente. US6 Eu, como usu\u00e1rio, gostaria de definir a prioridade da tarefa (baixa, m\u00e9dia ou alta), para que eu possa focar nas atividades mais importantes. US7 Eu, como usu\u00e1rio, gostaria de marcar as tarefas conclu\u00eddas, para que eu possa visualizar meu progresso. US8 Eu, como usu\u00e1rio, gostaria de identificar as tarefas atrasadas, para que eu possa tomar provid\u00eancias imediatas. US9 Eu, como usu\u00e1rio, gostaria de ter v\u00e1rias listas de ToDo, para que eu possar separar minhas tarefas. US10 Eu, como usu\u00e1rio, gostaria de poder apagar uma lista de ToDo, para excluir o que eu n\u00e3o querer mais. US11 Eu, como usu\u00e1rio, gostari de poder editar o nome e a descri\u00e7\u00e3o das listas de ToDo j\u00e1 criadas, para poder atualizar os dados dela."},{"location":"backlog/#conclusao","title":"Conclus\u00e3o","text":"<p>Portanto, ap\u00f3s a modelagem dos requisitos e conclus\u00e3o da defini\u00e7\u00e3o do nosso escopo do backlog, podemos prosseguir para a etapa de planejamento e desenvolvimento da arquitetura do nosso projeto.</p>"},{"location":"brainstorm/","title":"Brainstorm","text":""},{"location":"brainstorm/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O Brainstorm \u00e9 uma t\u00e9cnica de elicita\u00e7\u00e3o de requisitos, rotineiramente utilizada em grupos de usu\u00e1rios para extra\u00e7\u00e3o de requisitos funcionais e n\u00e3o funcionais em um projeto de software.  Essa t\u00e9cnica consiste em fazer com que os usu\u00e1rios forne\u00e7am ideias de funcionalidades para o produto de software sem limita\u00e7\u00f5es ou restri\u00e7\u00f5es, fazendo com que o fluxo de ideias seja alto, e que traga diferentes vis\u00f5es para o projeto.</p>"},{"location":"brainstorm/#metodologia","title":"Metodologia","text":"<p>Para utiliza\u00e7\u00e3o desta t\u00e9cnica, foram convidado usu\u00e1rios que possuem o perfil de utilizador de aplica\u00e7\u00f5es como a proposta neste desenvolvimento, para que pudesse ser extra\u00eddo requisitos que agreguem valor ao produto de software. A seguir temos a grava\u00e7\u00e3o da reuni\u00e3o realizada com os convidados:</p> V\u00eddeo 1: Elicita\u00e7\u00e3o de Requisitos com Usu\u00e1rios"},{"location":"brainstorm/#requisitos","title":"Requisitos","text":"ID Requisitos 1 Deve ser poss\u00edvel cadastrar tarefas 2 Deve ser poss\u00edvel alterar o conte\u00fado da tarefa j\u00e1 criada 3 Deve ser poss\u00edvel excluir uma ou mais tarefas 4 Deve ser poss\u00edvel definir uma data limite para a tarefa 5 Deve ser poss\u00edvel definir um hor\u00e1rio para a tarefa 6 Deve ser poss\u00edvel definir a prioridade da tarefa (baixa, m\u00e9dia e alta) 7 Deve ser poss\u00edvel marcar as tarefas conclu\u00eddas 8 Deve ser poss\u00edvel identificar as tarefas atrasadas"},{"location":"brainstorm/#conclusao","title":"Conclus\u00e3o","text":"<p>Ap\u00f3s an\u00e1lise das entrevistar, e dos requisitos elicitados, pode-se constatar que os participantes das entrevistar que possuem o perfil de usu\u00e1rio da aplica\u00e7\u00e3o, n\u00e3o necessitam de funcionalidades al\u00e9m das esperadas para um sistema de lista de tarefas. Com isso o escopo do projeto se torna mais restrito a esses requisitos.</p>"}]}